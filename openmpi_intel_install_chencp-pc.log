
============================================================================
== Configuring Open MPI
============================================================================

*** Startup tests
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... icc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether icc accepts -g... yes
checking for icc option to accept ISO C89... none needed
checking how to run the C preprocessor... icc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for style of include used by make... GNU
checking how to create a ustar tar archive... gnutar
checking dependency style of icc... gcc3
checking whether make supports nested variables... yes

*** Checking versions
checking Open MPI version... 1.6
checking Open MPI release date... May 10, 2012
checking Open MPI Subversion repository version... r26429
checking Open MPI Run-Time Environment version... 1.6
checking Open MPI Run-Time Environment release date... May 10, 2012
checking Open MPI Run-Time Environment Subversion repository version... r26429
checking Open Portable Access Layer version... 1.6
checking Open Portable Access Layer release date... May 10, 2012
checking Open Portable Access Layer Subversion repository version... r26429

*** Initialization, setup
configure: builddir: /tmp/clussoft/openmpi-1.6
configure: srcdir: /tmp/clussoft/openmpi-1.6
installing to directory "/home/chencp/software/intel/mpi/openmpi-16-intel"

*** OPAL Configuration options
checking if want to run code coverage... no
checking if want to compile with branch probabilities... no
checking if want to debug memory usage... no
checking if want to profile memory usage... no
checking if want developer-level compiler pickyness... no
checking if want developer-level debugging code... no
checking if want to install project-internal header files... no
checking if want pretty-print stacktrace... yes
checking if want pty support... yes
checking if want weak symbol support... yes
checking if want dlopen support... yes
checking if want heterogeneous support... no
checking if want trace file debugging... no
checking if want fault tolerance... Disabled fault tolerance
checking if want IPv6 support... no
checking if want package/brand string... Open MPI root@chencp-pc Distribution
checking if want ident string... 1.6
checking if want to use an alternative checksum algo for messages... no
checking maximum length of processor name... 256
checking maximum length of error string... 256
checking maximum length of object name... 64
checking maximum length of info key... 36
checking maximum length of info val... 256
checking maximum length of port name... 1024
checking maximum length of datarep string... 128

*** ORTE Configuration options
checking if want full RTE support... yes
checking if want orterun "--prefix" behavior to be enabled by default... yes
checking if want reliable multicast... no

*** OMPI Configuration options
checking if want compile-time warnings inside of mpi.h... no
checking if want sparse process groups... no
checking if want peruse support... no
checking if want Fortran 77 bindings... yes
checking if want Fortran 90 bindings... yes
checking Fortran 90 bindings "size"... small
checking if want PMPI... yes
checking if want C++ bindings... yes
checking if want MPI::SEEK_SET support... yes
checking if want run-time MPI parameter checking... runtime
checking max supported array dimension in F90 MPI bindings... 4

============================================================================
== Compiler and preprocessor tests
============================================================================

*** C compiler and preprocessor
checking for gcc... (cached) icc
checking whether we are using the GNU C compiler... (cached) yes
checking whether icc accepts -g... (cached) yes
checking for icc option to accept ISO C89... (cached) none needed
checking whether icc and cc understand -c and -o together... yes
checking for the C compiler vendor... intel
checking for ANSI C header files... (cached) yes
checking if icc supports -finline-functions... yes
checking if icc supports -fno-strict-aliasing... yes
configure: WARNING:  -fno-strict-aliasing has been added to CFLAGS
checking if icc supports -restrict... yes
configure: WARNING:  -restrict has been added to CFLAGS
checking if icc supports __builtin_expect... yes
checking if icc supports __builtin_prefetch... yes
checking for C optimization flags... -O3 -DNDEBUG -intel-static -finline-functions -fno-strict-aliasing -restrict
checking for Interix environment... no
checking for C ident string support... #pragma ident
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for int128_t... no
checking for uint128_t... no
checking for long long... yes
checking for long double... yes
checking for float _Complex... yes
checking for double _Complex... yes
checking for long double _Complex... yes
checking for intptr_t... yes
checking for uintptr_t... yes
checking for mode_t... yes
checking for ssize_t... yes
checking for ptrdiff_t... yes
checking size of char... 1
checking size of short... 2
checking size of int... 4
checking size of long... 8
checking size of long long... 8
checking size of float... 4
checking size of double... 8
checking size of long double... 16
checking size of float _Complex... 8
checking size of double _Complex... 16
checking size of long double _Complex... 32
checking size of void *... 8
checking size of size_t... 8
checking size of ssize_t... 8
checking size of ptrdiff_t... 8
checking size of wchar_t... 4
checking alignment of _Bool... 1
checking alignment of int8_t... 1
checking alignment of int16_t... 2
checking alignment of int32_t... 4
checking alignment of int64_t... 8
checking alignment of char... 1
checking alignment of short... 2
checking alignment of wchar_t... 4
checking alignment of int... 4
checking alignment of long... 8
checking alignment of long long... 8
checking alignment of float... 4
checking alignment of double... 8
checking alignment of long double... 16
checking alignment of float _Complex... 4
checking alignment of double _Complex... 8
checking alignment of long double _Complex... 16
checking alignment of void *... 8
checking for C bool type... no
checking size of _Bool... 1
checking for inline... __inline__
checking for C/C++ restrict keyword... __restrict
checking for weak symbol support... yes
checking whether icc-8.1 for EM64T works with variable arguments... yes
checking for functional offsetof macro... yes

*** C++ compiler and preprocessor
checking whether we are using the GNU C++ compiler... yes
checking whether icpc accepts -g... yes
checking dependency style of icpc... gcc3
checking how to run the C++ preprocessor... icpc -E
checking for the C++ compiler vendor... intel
checking if icpc supports -finline-functions... yes
configure: WARNING:  -finline-functions has been added to CXXFLAGS
checking if C and C++ are link compatible... yes
checking for C++ optimization flags... -O3 -DNDEBUG -intel-static -finline-functions
checking size of bool... 0
checking alignment of bool... configure: WARNING: *** Problem running configure test!
configure: WARNING: *** See config.log for details.
configure: error: *** Cannot continue.
